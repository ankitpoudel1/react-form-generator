{"version":3,"sources":["NumberInput.js","SelectInput.js","TextAreaInput.js","TextInput.js","FormRow.js","App.js","reportWebVitals.js","index.js"],"names":["NumberInput","props","className","fieldObj","name","type","SelectInput","optionsArray","options","split","value","length","map","option","index","TextAreaInput","TextInput","FormRow","App","useState","fields","setFields","formSubmitted","style","height","color","fontFamily","fontSize","Card","Body","field","onChange","e","linkHolder","target","handleNameChange","handleTypeChange","fieldTypes","fieldType","label","handleOptionsChange","Button","variant","onClick","preventDefault","push","handleFieldAdd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90f98656.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function NumberInput(props) {\n    return (\n        <div className=\"mb-2\">\n            <label className=\"form-label text-muted\"> {props.fieldObj.name} </label>\n            <input type=\"number\" className=\"form-control\" />\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function SelectInput(props) {\n\n    let optionsArray = [];\n\n    if (props.fieldObj.options){\n         optionsArray = props.fieldObj.options.split(',');\n    }\n    return (\n        <div className=\"mb-2\">\n            \n            <label className=\"form-label text-muted\"> {props.fieldObj.name} </label>\n\n                <select className=\"form-control\">\n                  <option value=\"\"></option>\n                  {optionsArray.length>0 && optionsArray.map((option,index)=>\n                    <option key={index} value={option}> {option} </option>\n                  )}\n                </select>   \n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function TextAreaInput(props) {\n    return (\n        <div className=\"w-100 mb-2\">\n                <label className=\"form-label text-muted\"> {props.fieldObj.name} </label>\n                <textarea className=\"form-control\" />\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function TextInput(props) {\n    return (\n    <div className=\"mb-2\">\n        <label className=\"form-label text-muted\"> {props.fieldObj.name} </label>\n        <input type=\"text\" className=\"form-control\" />\n    </div>\n    )\n}\n","import React from 'react'\nimport NumberInput from './NumberInput';\nimport SelectInput from './SelectInput';\nimport TextAreaInput from './TextAreaInput';\nimport TextInput from './TextInput';\n\nexport default function FormRow(props) {\n    return (\n       <div>\n     \n        {(props.fieldObj.type==\"text\") && <TextInput fieldObj={props.fieldObj} />}\n\n        {(props.fieldObj.type==\"number\") && <NumberInput fieldObj={props.fieldObj} />}\n\n        \n        {(props.fieldObj.type==\"textarea\") && <TextAreaInput fieldObj={props.fieldObj} /> }    \n       \n       \n        {(props.fieldObj.type==\"select\") && <SelectInput fieldObj={props.fieldObj} /> }    \n\n     \n        </div>\n    );\n}\n","import { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nimport FormRow from './FormRow';\n\nfunction App() {\n  const [fields,setFields] = useState([{\"name\":\"\",\"type\":\"\"}]);\n  const [formSubmitted,setFormSubmitted] = useState(true);\n\nconst handleFieldAdd = (e) => {\n    e.preventDefault();\n    let linkHolder =[...fields];\n    linkHolder.push({\"name\":\"\",\"type\":\"\"});\n    setFields(linkHolder);\n}\n\nconst handleNameChange= (e,index) => {\n  let linkHolder = [...fields];\n  linkHolder[index].name = e.target.value;\n  setFields(linkHolder);\n}\n\nconst handleTypeChange = (e,index) => {\n  let linkHolder = [...fields];\n  linkHolder[index].type = e.target.value;\n  setFields(linkHolder);\n}\n\nconst handleOptionsChange =(e,index) => {\n  let linkHolder = [...fields];\n  linkHolder[index].options = e.target.value;\n  setFields(linkHolder);\n}\n\n// const handleSubmit = (e) => {\n//   e.preventDefault();\n//   setFormSubmitted(true);\n// }\n  return (\n    <div className=\"w-100 d-flex bg-dark\">\n      <div \n      className=\"w-50 justify-content-center text-center\"\n      style={{height:'100vh'}}\n      > \n\n      <div style={{color:'#FFF',fontFamily: 'Roboto', fontSize: '30px'}}>\n        FORM GENERATOR  \n      </div>  \n\n      <div className=\"w-75 justify-content-center align-items-center mx-auto\">\n      <Card className=\"m-3\">\n\n           <Card.Body>\n            <form \n            // onSubmit={(e)=>handleSubmit(e)}\n            >\n           \n            <div>\n                {fields.map((field,index)=>\n                <div key={index} className=\"row mb-2\">\n\n                  <div className=\"col-md-6\">\n                  \n                    <label className=\"form-label\"> Name </label>\n                    <input className=\"form-control\" type=\"text\" value={field.name} onChange={(e)=>handleNameChange(e,index)}></input>\n\n                  </div>\n                  \n                  <div className=\"col-md-6\">\n\n                    <label className=\"form-label\"> Type </label>\n                    <select className=\"form-control\" value={field.type} onChange={(e)=>handleTypeChange(e,index)}>\n                        <option> </option>\n                        {fieldTypes.map((fieldType,index)=>\n                              <option key={index} value={fieldType.value}> {fieldType.label} </option>\n                        )}\n                    </select>\n\n                  </div>\n\n\n                  {field.type==\"select\" && <div className=\"col-md-12\">\n                    <label className=\"form-label text-muted fw-10\"> Select Options separated by comma </label>\n                    <input className=\"form-control\" type=\"text\" value={field.options} onChange={(e)=>handleOptionsChange(e,index)}></input>\n\n                  </div> \n                  }\n\n                </div>\n                )}\n            </div>\n\n            <Button variant=\"outline-secondary\" className=\"me-2\" onClick={(e)=>handleFieldAdd(e)}>Add new field</Button>\n\n            {/* <Button variant=\"outline-success\" type=\"submit\"> Create Form </Button> */}\n\n            </form>\n\n            </Card.Body>\n\n        </Card>\n\n        </div>\n\n      </div>\n\n      <div \n      className=\"w-50 bg-secondary\"\n      style={{color:'#000',height:'100vh'}}\n      >\n\n      <div style={{color:'#FFF',fontFamily: 'Roboto', fontSize: '30px'}}>\n        FORM PREVIEW  \n      </div>  \n\n        <div className=\"w-75 m-4\">\n\n            <Card>  \n\n            <Card.Body>\n\n            <form>\n\n            {formSubmitted && fields.map((field,index)=> \n              <FormRow fieldObj={field} key={index} />)}\n        \n            </form>\n\n            </Card.Body>\n\n            </Card>\n\n         </div>\n\n         \n\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n\nconst fieldTypes = [\n  {\"label\":\"Text\",\"value\":\"text\"},\n  {\"label\":\"Number\",\"value\":\"number\"},\n  {\"label\":\"Text Area\",\"value\":\"textarea\"},\n  {\"label\":\"Select\",\"value\":\"select\"}\n]","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}